/* Daniel Perry
 * Spring 05 - for cs6620
 * ray tracer - started 24 Jan 05
 *
 */

#include <iostream.h>

#include "gl/hpoint.h"
#include "gl/image.h"
#include "gl/ray.h"
#include "gl/rgb.h"
#include "gl/vector3d.h"
#include "gl/sphere.h"
#include "gl/surface.h"

#include "Time.h"
#include "gl/util.h";


//#define MYMAXFLOAT FLT_MAX
//#define MYSMALLFLOAT 1e-6
//linux: FLT_MAX
// Sun: MAXFLOAT


int main(int args, char * argv)
{
  Time time;
  time.initialize();
  double setupt,render,finalize;

  int yres=512,xres=512;
  

  // sphere( vect(center) , double radius , rgb matte, rgb reflective , double highlight, double phong_exp )
  sphere sphere1( vector3d(-1,.5,1) , .5 , rgb(1,.2,.2) , rgb(0,0,0), 0, 0 );
  sphere sphere2( vector3d(0,0,1.1) , .8 , rgb(.2,1,.2) , rgb(0,0,0), 0,0 );
  sphere sphere3( vector3d(1,-.5,1.2) , .7 , rgb(.2,.2,1) , rgb(0,0,0), 0,0);

  surfacevals quals;
  rgb color;
  double t;
  image im( xres, yres );
  
  setupt = time.currentSeconds();

  for( int i=0; i<yres; i++){
    for( int j=0; j<xres; j++){
      rgb result;
      double x = 2 * (j-xres/2. + .5) / xres;
      double y = 2 * (i-yres/2. + .5)/yres;
      ray Ray( vector3d(0,0,-1) , vector3d(x,-y,1) );
      
      if(sphere1.hit( Ray , MYSMALLFLOAT , MYMAXFLOAT , t , quals )){
	color = rgb(1,.2,.2);
      }
      else if (sphere2.hit( Ray , MYSMALLFLOAT , MYMAXFLOAT , t , quals )){
	color = rgb(.2,1,.2);
      }      
      else if (sphere3.hit( Ray , MYSMALLFLOAT , MYMAXFLOAT , t , quals )){
	color = rgb(.2,.2,1);
      }
      else{
	color = rgb(.2,.2,.2);
      }
      
      im.set(j,i,color );
    }
  }
  render = time.currentSeconds();

  im.writeppm ( cout );

  finalize = time.currentSeconds();

  finalize -= (setupt+render);
  render -= setupt;

  cerr<<"setup: "<<setupt<<"\nrender: "<<render<<"\nfinalize: "<<finalize<<endl;
  return 0;
}
